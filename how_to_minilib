MiniLibX is an easy way to create graphical software,
without any X-Window programming knowledge. It provides
simple window creation, a drawing tool, image and basic events
management.

To use MiniLibX functions, you'll need to link
your software with several libraries, including the MiniLibX library itself.
To do this, simply add the following arguments at linking time:

-lmlx -lXext -lX11

You may also need to specify the path to these libraries, using
the -L flag.

First of all, you need to initialize the connection
between your software and the display.
Once this connection is established, you'll be able to
use other MiniLibX functions to send the X-Server messages,
like "I want to draw a yellow pixel in this window" or "did the
user hit a key?".

void	*mlx_init()
	return (xvar);
function will create this connection. No parameters are needed, ant it will
return a "void *" identifier, used for further calls to the library routines.

If mlx_init()
fails to set up the connection to the X server, it will return NULL, otherwise
a non-null pointer is returned as a connection identifier.

The X-Window system is bi-directionnal. On one hand, the program sends orders to
the screen to display pixels, images, and so on. On the other hand,
it can get information from the keyboard and mouse associated to
the screen. To do so, the program receives "events" from the keyboard or the
mouse.

To receive events, you must use

int		mlx_loop(t_xvar *xvar)
	return (0);

This function never returns. It is an infinite loop that waits for
an event, and then calls a user-defined function associated with this event.
A single parameter is needed, the connection identifier mlx_ptr

You can assign different functions to the three following events:
- A key is pressed
- The mouse button is pressed
- A part of the window should be re-drawn
	(this is called an "expose" event, and it is your program's job to handle it).

The three functions

int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)

int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)

int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)

work exactly the same way.

funct

is a pointer to the function you want to be called
when an event occurs. This assignment is specific to the window defined by the

win_ptr

identifier. The

param

adress will be passed to the function everytime it is called, and should be
used to store the parameters it might need.

The

void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)

function creates a new window on the screen, using the

size_x and size_y

parameters to determine its size, and

title

as the text that should be displayed in the window's title bar.

The
.I mlx_ptr
parameter is the connection identifier returned by
.B mlx_init
() (see the
.B mlx
man page).
.B mlx_new_window
() returns a
.I void *
window identifier that can be used by other MiniLibX calls.
Note that the MiniLibX
can handle an arbitrary number of separate windows.
